if [[ $(uname) == "Darwin" ]]; then
    export PATH=/opt/homebrew/bin/:$PATH
elif [[ -d /home/linuxbrew/ ]]; then
    export PATH=/home/linuxbrew/.linuxbrew/bin/:$PATH
elif [[ -d ~/.linuxbrew/ ]]; then
    export PATH=~/.linuxbrew/bin/:$PATH
fi

export _MY_RC_DIR="$(dirname $(readlink ~/.gitconfig))/.."
export POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
export RUSTC_WRAPPER=$(command -v sccache)
export GOPATH=~/go
export PATH=$PATH:$GOPATH/bin

if [ ! -z "$(command -v eza)" ]; then
    # using eza
    alias ls='eza'
    alias ll='ls -lh --reverse --sort time --icons --group-directories-first --git'
    alias tree='ls --icons --tree'
elif [ ! -z "$(command -v exa)" ]; then
    # using exa
    alias ls='exa'
    alias ll='ls -lFh --reverse --sort time --icons --group-directories-first --git'
    alias tree='ls --icons --tree'
else 
    # using ls
    alias ls='ls --color=auto -CF'
    alias ll='ls -lFht'
fi

alias la='ls -a'
alias lla='ll -a'
alias l.='ls -d .*'
alias ll.='ll .*'
alias lr='ls -R'

if [ -z "$(command -v nvim)" ]; then 
    export EDITOR="vim"
else 
    export EDITOR="nvim"; 
    export MANPAGER='nvim +Man!'
fi

[ ! -z "$(command -v bat)" ] && alias cat=bat

alias  vi='${EDITOR}'
alias fvi='${EDITOR} $(fzf --multi --layout=reverse --preview "fzf-tab-previewer {}")'
alias fcd='cd "$(fd -t d --print0 | fzf --read0 --print0 --layout=reverse --preview "fzf-tab-previewer {}")"'
alias fzp="fzf --delimiter : --preview 'bat --style=full --color=always --highlight-line {2} {1}' --preview-window '~3,+{2}+3/2' --multi --bind 'ctrl-space:select'"

alias .ml='vi ~/.myshrc.local'
alias .gl='vi ~/.gitconfig.local'

alias  .m='vi ${_MY_RC_DIR}/dot/myshrc'
alias .me='vi ${_MY_RC_DIR}/dot/myenv'
alias  .v='vi ${_MY_RC_DIR}/dot/vim/vimrc'
alias  .n='vi +"cd ${_MY_RC_DIR}/dot/config/nvim/" +"Telescope find_files"'
alias  .w='vi +"cd ${_MY_RC_DIR}/dot/config/wezterm/" +"Telescope find_files"'
alias  .z='vi ~/.zshrc'
alias .zm='vi ${_MY_RC_DIR}/dot/config/zim/zimrc'
alias  .t='vi ${_MY_RC_DIR}/dot/config/tmux/tmux.conf'
alias  .p='vi ~/.p10k.zsh'
alias .gc='vi ${_MY_RC_DIR}/dot/config/git/config'
alias .gcl='vi ${_MY_RC_DIR}/dot/config/git/config.local'
alias .gi='vi ${_MY_RC_DIR}/dot/config/git/ignore'

alias  .rc='cd ${_MY_RC_DIR}'
alias .bin='cd ${_MY_RC_DIR}/bin'
alias .dot='cd ${_MY_RC_DIR}/dot'
alias   .x='exec zsh -l'

alias wget='wget --continue'
alias grep='GREP_OPTIONS= grep --color=auto --exclude-dir=.cvs --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn'
alias pgrep='ps aux | grep -v grep | grep -i -e VSZ -e'

alias -g   ga='git add'
alias -g   gl='git log --oneline --decorate --date=relative --graph -10 --pretty=format:"%C(yellow)%h %Cred%>(12,trunc)%ad %Cblue%<(12)%aN%Cgreen%d%Creset %s"'
alias -g  glc='git log -n 1 --pretty=format:%H -- '
alias -g  glf='git log --oneline --decorate --pretty=format:"%h %<(20,trunc)%aN %s" | fzf --layout=reverse --preview "git show --color=always {+1}"'
alias -g  glh='git log -p -M --follow --stat -- '
alias -g   gs='git status'
alias -g  gsi='git status --ignored'
alias -g  gss='git status --short'
alias -g   gd='git diff'
alias -g  gdf='git diff --relative --name-only | fzf --layout=reverse --preview "git diff --color=always {+1}"'
alias -g  gdt='git difftool'
alias -g  gdc='git diff --cached'
alias -g  gdn='git diff --relative --name-only'
alias -g gdns='git diff --relative --name-status'
alias -g  gcm='git commit -m'
alias -g gcma='git commit -am'
alias -g gwta='git worktree add'
alias -g gwtp='git worktree prune'
alias -g gwtl='git worktree list'
alias -g  gco='git checkout'
alias -g  gbr='git branch'
alias -g  gpl='git pull'
alias -g  gps='git push'
alias -g  gcp='git cherry-pick'
alias -g gcpa='git cherry-pick --abort'
alias -g gcpc='git cherry-pick --continue'
alias -g   gf='git fetch'
alias -g gbrn='git symbolic-ref --short HEAD'
alias -g  grb='git rebase'
alias -g grba='git rebase --abort'
alias -g grbc='git rebase --continue'

alias tml='tmux -L default ls'
alias rgn='rg --files-with-matches'
alias rgN='rg --files-without-match'

gri () { 
    if [ -z "${1}" ]; then
        echo "Usage: gri <number of commits>" 
        return
    fi
    git rebase -i @~"${1}"
}

tm () {
    [ -z "${1}" ] && echo "Usage: ${0} <session_name>" >&2 && return
    exec tmux new -A -s ${1}
}

frg () {
    rg -n $@ | fzf \
        --delimiter : \
        --preview 'bat --style=full --color=always --highlight-line {2} {1}' \
        --preview-window '~3,+{2}+3/2' \
        --multi --bind 'ctrl-space:select'
}

frgv() {
    lines=$(frg $@)
    if [ ! -z "$lines" ]; then
        cmd="$EDITOR"
        for line in $lines; do
            file=$(echo -n $line | awk -F : '{printf " +\"e +%s %s\"", $2, $1}')
            cmd="$cmd $file"
        done
        eval $cmd
    fi
}

# vim: ft=sh
