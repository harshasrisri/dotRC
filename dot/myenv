if [ -z "$(which nvim 2>/dev/null)" ]; then 
    export EDITOR="vim"; 
    alias vi=vim
else 
    export EDITOR="nvim"; 
    export MANPAGER='nvim +Man!'
    alias vi=nvim
fi

export GREP_OPTIONS=
export _MY_RC_DIR="$(dirname $(readlink ~/.vimrc))"
export _MY_BIN_DIR=$(realpath ${_MY_RC_DIR}/../bin)
export PATH=$PATH:$_MY_BIN_DIR
export POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true

alias ls='ls --color=auto -CF'
alias ll='ls -lFht'
alias la='ls -a'
alias lla='ls -lFhta'
alias lr='ls -R'
alias l.='ls -d .*'
alias ll.='ls -lFhtd .*'

alias .ml='vi ~/.myshrc.local'
alias .m='vi ~/.myshrc'
alias .me='vi ~/.myenv'
alias .v='vi ~/.vimrc'
alias .n='vi ~/.config/nvim/init.vim'
alias .z='vi ~/.zimrc'
alias .t='vi ~/.tmux.conf'
alias .p='vi ~/.p10k.zsh'
alias .a='vi ~/.config/alacritty/alacritty.yml'
alias .gc='vi ~/.gitconfig'
alias .gi='vi ~/.gitignore'
alias .gl='vi ~/.gitconfig.local'
alias .rc='cd ${_MY_RC_DIR}/..'
alias .x='exec zsh -l'

alias wget='wget -c'
alias grep='grep --color=auto --exclude-dir=.cvs --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn'
alias pgrep='ps aux | grep -v grep | grep -i -e VSZ -e'

alias -g ga='git add'
alias -g gl='git log --oneline --decorate --date=relative --graph -10 --pretty=format:"%C(yellow)%h %Cred%>(12,trunc)%ad %Cblue%<(12)%aN%Cgreen%d%Creset %s"'
alias -g gs='git status'
alias -g gss='git status --short'
alias -g gd='git diff'
alias -g gdt='git difftool'
alias -g gdc='git diff --cached'
alias -g gdn='git diff --relative --name-only'
alias -g gdns='git diff --relative --name-status'
alias -g gcm='git commit -m'
alias -g gcma='git commit -am'
alias -g gwta='git worktree add'
alias -g gwtp='git worktree prune'
alias -g gwtl='git worktree list'
alias -g gco='git checkout'
alias -g gbr='git branch'
alias -g gpl='git pull'
alias -g gps='git push'
alias -g gcp='git cherry-pick'
alias -g gf='git fetch'

alias ff='find -type f -name'

alias tml='tmux ls'
alias tma='tmux attach -t'
alias tmn='tmux new -s'

gri () { 
    if [ -z "${1}" ]; then
        echo "Usage: gri <number of commits>" 
        return
    fi
    git rebase -i @~"${1}"
}

fzkill () {
    [ -z "$1" ] && echo "$0: requires one argument" && return
    ps aux | grep -e ${USER:0:7} -e "$1" | fzf | awk '{ print $2 }' | xargs -I {} kill -9 {}
}

# vim: ft=sh
